from GraphicComponent import Event


class Root:
    father: Root
    event: dict[str:list[Event]]
    event_track_type: set[any]
    son: set[Root]
    ID: str

    def __init__(self, *args, **kwargs) -> None:...

    def update(self, *args) -> None:...

    def __update__(self) -> None:...

    def tree_add_son(self, son: Root) -> None:...

    def tree_remove_son(self, son: Root) -> None:...

    def tree_find_root(self) -> Root:...

    def tree_goto_father(self, general: int) -> Root:...

    def tree_bind_father(self, father: Root) -> None:...

    def event_spread(self, event_name: any, **event_args) -> None:...

    def event_receive(self, evnet_name: any, **kwargs) -> any:...

    def event_tree_update(self, event_track_collection: set) ->set:...

    def event_tree_build(self) -> any:...

    def event_add_event(self, event_type: int, event: Event, **kwargs) -> None:...

    def event_remove_event(self,event_type: int, event_id: str) -> None:...

    def delete(self)->None:...

    def delete_with_son(self)->None:...
